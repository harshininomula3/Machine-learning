# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NFPhzuQD2FskjT3jIq7pQtKS99TbqT2f
"""

inputs=[1,2,3]
weights=[0.2,0.8,-0.5]
bias=2
outputs=(inputs[0]*weights[0]+inputs[1]*weights[1]+inputs[2]*weights[2]+bias)
#x1*w1+x2*w2+x3*w3+b
print(outputs)

#layers of neurons
inputs=[1,2,3,2.5]
weights=[[0.2,0.8,-0.5,1],[0.5,-0.91,0.26,-0.5],[-0.26,-0.27,0.17,0.07]]
weights1=weights[0]
weights2=weights[1]
weights3=weights[2]
bias=[2,3,0.5]
bias1=2
bias2=3
bias3=0.5
outputs=[inputs[0]*weights1[0]+inputs[1]*weights1[1]+inputs[2]*weights1[2]+inputs[3]*weights1[3]+bias1,inputs[0]*weights2[0]+inputs[1]*weights2[1]+inputs[2]*weights2[2]+inputs[3]*weights2[3]+bias2,inputs[0]*weights3[0]+inputs[1]*weights3[1]+inputs[2]*weights3[2]+inputs[3]*weights3[3]+bias3]
print(outputs)

#looping layeredcnetworks
inputs=[1.1,2.2,3.3]
weights=[[2,0,0],[2,2,0],[2,2,2]]
biases=[0,0,1]
layer_outputs=[]
for nueron_weights,nueron_bias in zip(weights,biases):
    nueron_output=0
    for n_input,weight in zip(inputs,nueron_weights):
        nueron_output+=n_input*weight
nueron_output+=nueron_bias
layer_outputs.append(nueron_output)
print(layer_outputs)

import numpy as np
inputs=[1.0,2.0,3.0,2.5]
weights=[0.2,0.8,-0.5,1.0]
bias=2.0
outputs=np.dot(weights,inputs)+bias
print(outputs)